import openai
import os
from dotenv import load_dotenv
import streamlit as st
from fpdf import FPDF

# Carrega chave da API do OpenAI do arquivo .env
load_dotenv()
openai.api_key = os.environ["OPENAI_API_KEY"]

st.set_page_config(page_title="Corretor ENEM com ALD", layout="wide")
st.title("üìö Corretor de Reda√ß√µes - ENEM com An√°lise Dial√≥gica")

texto = st.text_area("‚úçÔ∏è Cole aqui a reda√ß√£o do aluno para an√°lise completa:")

def construir_prompt(texto):
    return f"""
Voc√™ √© um corretor experiente do ENEM, com dom√≠nio da matriz de compet√™ncias e da An√°lise Lingu√≠stica de Base Dial√≥gica (ALD).

Corrija a reda√ß√£o a seguir com base nas 5 compet√™ncias do ENEM. Para cada compet√™ncia:

1. Atribua uma nota de 0 a 200.
2. Liste **detalhadamente todos os trechos que motivaram desconto de nota**, com explica√ß√µes claras.
3. Explique quais crit√©rios foram plenamente atendidos, com exemplos.
4. Justifique didaticamente o porqu√™ da pontua√ß√£o atribu√≠da, como se explicasse a outro professor.
5. Use uma linguagem t√©cnica e objetiva, adequada ao p√∫blico docente.

Depois disso:

üîç Fa√ßa **coment√°rios espec√≠ficos em TODOS os trechos problem√°ticos que ocasionaram a dminui√ß√£o da nota**, incluindo:
- Qual o problema (ortografia, coer√™ncia, ambiguidade etc.);
- Qual trecho gerou o problema;
- Uma sugest√£o de reescrita mais adequada.

üß† Em seguida, produza uma **An√°lise Dial√≥gica Geral** nos seguintes eixos:

- **Projeto de dizer do sujeito** (intencionalidade discursiva);
- **Coer√™ncia e progress√£o argumentativa**;
- **Presen√ßa de vozes sociais** (autoria x discurso de outrem);
- **Rela√ß√£o entre texto e contexto** (sociocultural e tem√°tico).

üîΩ A reda√ß√£o do aluno est√° abaixo. Fa√ßa uma corre√ß√£o completa e rigorosa, seguindo todas as instru√ß√µes.

Reda√ß√£o:
\"\"\" 
{texto}
\"\"\"
"""

if st.button("üîç Corrigir Reda√ß√£o") and texto:
    with st.spinner("Analisando a reda√ß√£o com base dial√≥gica..."):
        try:
            response = openai.ChatCompletion.create(
                model="gpt-4-turbo",
                messages=[{"role": "user", "content": construir_prompt(texto)}],
                temperature=0.3
            )
            correcao = response.choices[0].message.content

            st.markdown("## ‚úÖ Resultado da Corre√ß√£o")
            st.write(correcao)

            # Op√ß√£o para gerar PDF
            if st.button("üìÑ Gerar PDF com a corre√ß√£o"):
                pdf = FPDF()
                pdf.add_page()
                pdf.set_font("Arial", size=12)
                for linha in correcao.split('\n'):
                    pdf.multi_cell(0, 10, linha)
                pdf.output("correcao_redacao.pdf")
                with open("correcao_redacao.pdf", "rb") as f:
                    st.download_button("üì• Baixar PDF da Corre√ß√£o", f, file_name="correcao_redacao.pdf")

        except Exception as e:
            st.error(f"Erro durante a corre√ß√£o: {str(e)}")
