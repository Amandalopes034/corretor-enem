import streamlit as st
import openai

# üé® Oculta a barra lateral (n√£o ser√° usada)
hide_sidebar = """
<style>
    [data-testid="stSidebar"] {display: none;}
</style>
"""
st.markdown(hide_sidebar, unsafe_allow_html=True)

# üöÄ Configura√ß√µes da p√°gina
st.set_page_config(page_title="Corretor ENEM Dial√≥gico", layout="wide")
st.title("üìù Corretor de Reda√ß√µes - ENEM com An√°lise Dial√≥gica")

# üîê CHAVE API
openai_api_key = "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"  # ‚¨ÖÔ∏è Substitua pelo seu sk-...
openai.api_key = openai_api_key

# üìù Campo para colar a reda√ß√£o
texto = st.text_area("Cole sua reda√ß√£o aqui:", height=400)

# ‚ñ∂Ô∏è Bot√£o de corre√ß√£o
if st.button("Corrigir Reda√ß√£o"):
    if not texto.strip():
        st.warning("‚ö†Ô∏è Por favor, cole uma reda√ß√£o antes de corrigir.")
    else:
        with st.spinner("‚è≥ Corrigindo..."):
            prompt = f"""
Voc√™ √© um avaliador experiente do ENEM e tamb√©m um linguista com abordagem dial√≥gica (inspirado em Bakhtin).

Sua tarefa √©:
1. Ler a reda√ß√£o abaixo e identificar **todos os trechos problem√°ticos**, como:
- Argumenta√ß√£o fraca ou contradit√≥ria
- Problemas de coes√£o ou progress√£o
- Apagamento de vozes sociais
- Silenciamento de sentidos
- Problemas enunciativos

Para cada trecho, use o formato:
"Trecho problem√°tico"
Coment√°rio: explica√ß√£o e sugest√£o de melhoria.

2. Em seguida, fa√ßa uma **an√°lise lingu√≠stica dial√≥gica geral**, considerando:
- O projeto de dizer do autor
- A progress√£o argumentativa
- Presen√ßa ou aus√™ncia de vozes sociais
- Coer√™ncia enunciativa

3. Depois, atribua uma nota de 0 a 200 para cada compet√™ncia do ENEM com justificativa curta:
- C1: Norma padr√£o
- C2: Compreens√£o da proposta
- C3: Organiza√ß√£o dos argumentos
- C4: Coes√£o textual
- C5: Proposta de interven√ß√£o

4. Por fim, forne√ßa a **nota final de 0 a 1000**.

Reda√ß√£o:
{texto}
"""

            resposta = openai.ChatCompletion.create(
                model="gpt-4-turbo",
                messages=[
                    {"role": "system", "content": "Voc√™ √© um corretor do ENEM com forma√ß√£o lingu√≠stica dial√≥gica."},
                    {"role": "user", "content": prompt}
                ],
                temperature=0.7,
                max_tokens=2500
            )

            resultado = resposta['choices'][0]['message']['content']

            st.markdown("## üìÑ Resultado da Corre√ß√£o:")
            st.markdown("---")
            st.markdown(resultado)
