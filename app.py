import openai
import os
from dotenv import load_dotenv
import streamlit as st
from fpdf import FPDF

# Carrega chave da API do OpenAI do arquivo .env
load_dotenv()
openai.api_key = os.environ["OPENAI_API_KEY"]

st.set_page_config(page_title="Corretor ENEM com ALD", layout="wide")
st.title("üìö Corretor de Reda√ß√µes - ENEM com An√°lise Dial√≥gica")

texto = st.text_area("‚úçÔ∏è Cole aqui a reda√ß√£o do aluno para an√°lise completa:", height=300)

def construir_prompt(texto):
    return f"""
Voc√™ √© um corretor experiente do ENEM, com dom√≠nio da matriz de compet√™ncias e da An√°lise Lingu√≠stica de Base Dial√≥gica (ALD).

Corrija a reda√ß√£o a seguir com base nas 5 compet√™ncias do ENEM. Utilize os crit√©rios abaixo (baseados na cartilha oficial do INEP) e lembre-se:

‚ö†Ô∏è Elenque **todos os erros e inconsist√™ncias** encontrados em cada compet√™ncia, mas **considere que at√© 2 erros pontuais n√£o justificam desconto na nota**, a menos que comprometam gravemente a compreens√£o do texto.

**Compet√™ncia 1: Norma padr√£o da l√≠ngua escrita**
- Avalie ortografia, acentua√ß√£o, pontua√ß√£o, concord√¢ncia, reg√™ncia, crase, tempos verbais e constru√ß√£o sint√°tica.
- Penalize reincid√™ncia ou erros que dificultem a leitura. Desconsidere at√© 2 erros pontuais se n√£o interferirem no entendimento.

**Compet√™ncia 2: Compreens√£o da proposta de reda√ß√£o**
- Verifique se o texto atende integralmente ao tema e √† proposta dissertativo-argumentativa.
- Penalize tangenciamento ou fuga parcial. Avalie o uso produtivo dos textos motivadores.

**Compet√™ncia 3: Sele√ß√£o e organiza√ß√£o de argumentos**
- Avalie a constru√ß√£o da tese, progress√£o l√≥gica, articula√ß√£o de ideias, repert√≥rio e profundidade.

**Compet√™ncia 4: Coes√£o textual**
- Avalie conectivos, coes√£o referencial, sequencial e lexical. Verifique fluidez e uso adequado de mecanismos coesivos.

**Compet√™ncia 5: Proposta de interven√ß√£o**
- A proposta deve apresentar: agente, a√ß√£o, meio/modo, finalidade e detalhamento. Penalize propostas vagas ou sem conex√£o com o problema abordado.

**Para cada compet√™ncia (C1 a C5):**
1. Informe a nota objetiva (0‚Äì200)
2. Explique os crit√©rios aplicados
3. Liste os pontos positivos e negativos observados
4. Destaque exemplos concretos do texto
5. Justifique didaticamente, como para outro professor

üîç Em seguida, forne√ßa **coment√°rios por trecho problem√°tico**, com:
- Qual √© o problema
- Trecho exato
- Sugest√£o de reescrita

üß† Finalize com uma **An√°lise Dial√≥gica Geral**, considerando:
- Projeto de dizer do sujeito
- Coer√™ncia e progress√£o argumentativa
- Presen√ßa de vozes sociais
- Rela√ß√£o entre texto e contexto

Reda√ß√£o do aluno:
"""
{texto}
"""
"""

if st.button("üîç Corrigir Reda√ß√£o") and texto:
    with st.spinner("Analisando a reda√ß√£o com base dial√≥gica..."):
        try:
            response = openai.ChatCompletion.create(
                model="gpt-4-turbo",
                messages=[{"role": "user", "content": construir_prompt(texto)}],
                temperature=0.3
            )
            correcao = response.choices[0].message.content

            st.markdown("## ‚úÖ Resultado da Corre√ß√£o")
            st.write(correcao)

            # Op√ß√£o para gerar PDF
            if st.button("üìÑ Gerar PDF com a corre√ß√£o"):
                pdf = FPDF()
                pdf.add_page()
                pdf.set_font("Arial", size=12)
                for linha in correcao.split('\n'):
                    pdf.multi_cell(0, 10, linha)
                pdf.output("correcao_redacao.pdf")
                with open("correcao_redacao.pdf", "rb") as f:
                    st.download_button("üì• Baixar PDF da Corre√ß√£o", f, file_name="correcao_redacao.pdf")

        except Exception as e:
            st.error(f"Erro durante a corre√ß√£o: {str(e)}")
