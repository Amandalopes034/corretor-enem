import streamlit as st
import openai
import os

# üîê Chave da OpenAI via secrets
openai.api_key = st.secrets["OPENAI_API_KEY"]

# Configura√ß√£o da interface
st.set_page_config(page_title="Corretor ENEM - GPT-4", layout="wide")
st.title("üìù Corretor de Reda√ß√µes ENEM com An√°lise Dial√≥gica (GPT-4)")

st.markdown("Cole abaixo sua reda√ß√£o. A an√°lise incluir√° coment√°rios por trecho, leitura dial√≥gica e notas com base nas 5 compet√™ncias do ENEM.")

# Entrada da reda√ß√£o
redacao = st.text_area("Cole sua reda√ß√£o aqui:", height=350)

# Bot√£o de corre√ß√£o
if st.button("Corrigir Reda√ß√£o"):
    if not redacao.strip():
        st.warning("‚ö†Ô∏è Por favor, cole sua reda√ß√£o antes de enviar.")
        st.stop()

    with st.spinner("Analisando com GPT-4..."):

        prompt = f"""
Voc√™ √© um corretor oficial do ENEM com forma√ß√£o em an√°lise lingu√≠stica dial√≥gica.

Leia a reda√ß√£o abaixo e produza:

1. Coment√°rios por trechos com problemas. Para cada trecho:
   - Destaque o texto problem√°tico entre aspas
   - Fa√ßa um coment√°rio explicativo, apontando o problema e sugerindo melhorias

2. Uma an√°lise dial√≥gica geral, considerando:
   - Projeto de dizer do sujeito
   - Coer√™ncia e progress√£o argumentativa
   - Presen√ßa (ou aus√™ncia) de vozes sociais
   - Rela√ß√£o entre texto e contexto

3. Atribua nota (0 a 200) para cada uma das 5 compet√™ncias do ENEM, com justificativas curtas:
   - C1: Norma padr√£o
   - C2: Compreens√£o da proposta
   - C3: Organiza√ß√£o dos argumentos
   - C4: Coes√£o textual
   - C5: Proposta de interven√ß√£o

4. Informe a nota final (0 a 1000), soma das cinco compet√™ncias.

Reda√ß√£o:
\"\"\"{redacao}\"\"\"
"""

        try:
            resposta = openai.ChatCompletion.create(
                model="gpt-4-turbo",
                messages=[
                    {"role": "system", "content": "Voc√™ √© um avaliador ENEM com abordagem lingu√≠stica dial√≥gica."},
                    {"role": "user", "content": prompt}
                ],
                temperature=0.6,
                max_tokens=1800  # pode ajustar pra caber mais sa√≠da se quiser
            )

            resultado = resposta["choices"][0]["message"]["content"]

            # Resultado
            st.subheader("‚úÖ Resultado da Corre√ß√£o")
            st.markdown("---")
            st.markdown(resultado)

        except Exception as e:
            st.error(f"‚ùå Erro ao acessar a API: {e}")
