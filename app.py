import streamlit as st
import openai
import os

# Chave via secrets
openai.api_key = os.environ["OPENAI_API_KEY"]

st.set_page_config(page_title="Corretor de Reda√ß√µes - ENEM com An√°lise Dial√≥gica")

st.title("üìù Corretor de Reda√ß√µes - ENEM com An√°lise Dial√≥gica")

# Entrada de texto
texto = st.text_area("Cole sua reda√ß√£o abaixo:", height=300)

# Bot√£o
if st.button("Corrigir Reda√ß√£o"):

    with st.spinner("Analisando sua reda√ß√£o..."):

        prompt = f"""
Voc√™ √© um corretor experiente do ENEM com forma√ß√£o em lingu√≠stica e an√°lise dial√≥gica.

Sua tarefa √© ler a reda√ß√£o abaixo e gerar uma corre√ß√£o detalhada em **tr√™s blocos principais**:

---

**1. Coment√°rios por trechos problem√°ticos**  
Para cada trecho com problemas, siga este formato:
- Trecho entre aspas
- Problema identificado com clareza
- Explica√ß√£o do impacto do problema
- Sugest√£o clara de reescrita ou melhoria

---

**2. An√°lise dial√≥gica geral**, cobrindo os seguintes aspectos:
- Projeto de dizer do sujeito
- Coer√™ncia e progress√£o argumentativa
- Presen√ßa (ou aus√™ncia) de vozes sociais
- Rela√ß√£o entre texto e contexto

---

**3. Avalia√ß√£o das 5 compet√™ncias do ENEM**  
Siga o formato abaixo, sendo **detalhista nas justificativas**:

**C1: Norma padr√£o**  
Nota (0-200): X  
Justificativa: [explique detalhadamente o uso da ortografia, concord√¢ncia, pontua√ß√£o, reg√™ncia, crase, etc. D√™ exemplos concretos.]

**C2: Compreens√£o da proposta**  
Nota (0-200): X  
Justificativa: [explique como o texto atende √† proposta, se tangenciou, como interpreta o tema, etc.]

**C3: Organiza√ß√£o dos argumentos**  
Nota (0-200): X  
Justificativa: [explique a estrutura textual, progress√£o das ideias, repeti√ß√µes, falhas argumentativas etc.]

**C4: Coes√£o textual**  
Nota (0-200): X  
Justificativa: [explique o uso de conectivos, retomadas, articula√ß√µes entre frases e par√°grafos.]

**C5: Proposta de interven√ß√£o**  
Nota (0-200): X  
Justificativa: [explique se h√° proposta clara, agentes, a√ß√µes, meios, finalidade e detalhamento suficiente.]

---

Ao final, diga:  
**Nota final: X/1000** (soma das compet√™ncias)

Reda√ß√£o a ser avaliada:
\"\"\"{texto}\"\"\"
"""

        try:
            resposta = openai.ChatCompletion.create(
                model="gpt-4",
                messages=[{"role": "user", "content": prompt}],
                max_tokens=3000,
                temperature=0.4,
            )

            correcao = resposta.choices[0].message["content"]
            st.markdown(correcao)

        except Exception as e:
            st.error(f"Erro ao acessar a API da OpenAI: {e}")
