import streamlit as st
import openai
import os

# T√≠tulo do app
st.set_page_config(page_title="Corretor ENEM com An√°lise Dial√≥gica", layout="wide")
st.title("üìù Corretor de Reda√ß√µes - ENEM com An√°lise Dial√≥gica")

# Coleta a chave secreta da OpenAI (armazenada nos secrets do Streamlit Cloud)
openai.api_key = os.environ["OPENAI_API_KEY"]

# Campo para colar a reda√ß√£o
st.markdown("### Cole sua reda√ß√£o abaixo:")
texto = st.text_area("Reda√ß√£o", height=300)

# Bot√£o de envio
if st.button("Corrigir Reda√ß√£o"):
    if not texto.strip():
        st.warning("Por favor, cole uma reda√ß√£o antes de enviar.")
    else:
        with st.spinner("Corrigindo..."):

            prompt = f"""
Voc√™ √© um corretor especializado em reda√ß√µes do ENEM. Avalie o texto a seguir com dois objetivos:

1. Fa√ßa coment√°rios por trechos, destacando partes do texto que apresentem problemas de coes√£o, argumenta√ß√£o, estrutura, inadequa√ß√µes gramaticais ou desvios do projeto de dizer do autor. Use destaques **negrito** nos trechos e fa√ßa coment√°rios explicativos abaixo de cada trecho problem√°tico.
2. Ao final, forne√ßa uma nota para cada uma das 5 compet√™ncias do ENEM (de 0 a 200), seguidas da nota final (soma das 5).

Reda√ß√£o:
\"\"\"{texto}\"\"\"

Formato de sa√≠da:
- Coment√°rios por trechos com marca√ß√£o clara (**trecho**) e explica√ß√£o
- Tabela com notas das 5 compet√™ncias + nota final
"""

            try:
                response = openai.ChatCompletion.create(
                    model="gpt-4-turbo",
                    messages=[{"role": "user", "content": prompt}],
                    temperature=0.3,
                    max_tokens=1200
                )

                resultado = response.choices[0].message.content
                st.markdown("### ‚úÖ Resultado da Corre√ß√£o:")
                st.markdown(resultado)

            except Exception as e:
                st.error(f"Erro ao acessar a API da OpenAI: {e}")
